version: '3'
services:
    app:
        build:
          context: ./
          dockerfile: Dockerfile
        container_name: ${COMPOSE_PROJECT_NAME}_app
        restart: always
        volumes:
          - ./:/var/www/
        depends_on:
          - db
          - rabbitmq
    db:
        image: postgres:12-alpine
        container_name: ${COMPOSE_PROJECT_NAME}_postgres
        restart: always
        environment:
          - POSTGRES_PORT=${DB_PORT}
          - POSTGRES_HOST=${DB_HOST}
          - POSTGRES_DB=${DB_NAME}
          - POSTGRES_USER=${DB_USER}
          - POSTGRES_USERNAME=${DB_USER}
          - POSTGRES_PASSWORD=${DB_PASSWORD}
          - POSTGRES_HOST_AUTH_METHOD=trust
          - PGDATA=/var/lib/postgresql/data/pgdata
        volumes:
            - ./database/postgres:/var/lib/postgresql/data/pgdata
    adminer:
      image: adminer
      restart: always
      ports:
        - 6080:8080
      links:
        - db
    nginx:
      image: nginx:alpine
      container_name: ${COMPOSE_PROJECT_NAME}_nginx
      restart: always
      ports:
        - 8080:80
      volumes:
        - ./:/var/www
        - ./containers/nginx:/etc/nginx/conf.d/
    rabbitmq:
      image: rabbitmq:3-management
      container_name: ${COMPOSE_PROJECT_NAME}_rabbitmq
      environment:
        - RABBITMQ_DEFAULT_USER=guest
        - RABBITMQ_DEFAULT_PASSWORD=guest
        - RABBITMQ_DEFAULT_VHOST=/
      ports:
        - 15672:15672
